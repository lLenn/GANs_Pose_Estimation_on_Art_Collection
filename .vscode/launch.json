{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Test Style Transfer",
            "type": "debugpy",
            "request": "launch",
            "program": "./src/test_style_transfer.py",
            "args": [
                "--dataset",
                "../../Datasets/custom/TestStyleTransfer/1 - photo",
                "--real",
                "../../Datasets/custom/TestStyleTransfer/4 - renaissance",
                "--model",
                "AdaIN",
                "--batch_size",
                "2",
                "--num_workers",
                "1",
                "--results_dir",
                ".output/metrics",
                "--results_prefix",
                "adain_renaissance",
                "--config",
                "src/style_transfer/config/adain.yaml",
                "vgg",
                "../../Models/AdaIN/vgg_normalised.pth",
                "decoder",
                "../../Models/AdaIN/decoder.pth"
            ],
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python: Test Pose Estimation on Style Images",
            "type": "debugpy",
            "request": "launch",
            "program": "./src/test_pose_estimation_on_styled_image.py",
            "args": [
                "--action",
                "artisticToPhotographic",
                "--data_root",
                "../../Datasets/HumanArt",
                "--dataset",
                "oil_painting",
                "--model_pose_estimation",
                "ViTPose",
                "--model_style_transfer",
                "CycleGAN",
                "--batch_size",
                "1",
                "--num_workers",
                "1",
                "--results_dir",
                ".output/metrics",
                "--results_prefix",
                "humanart__vitpose_coco_mixed__cyclegan_renaissance",
                "--config_pose_estimation",
                "src/pose_estimation/config/vitpose_base_validation.py",
                "--options_pose_estimation",
                "model_file",
                "../../Models/vitpose/coco_styled_mixed/best_coco_AP_epoch_210.pth",
                "--config_style_transfer", 
                "src/style_transfer/config/cyclegan_test.yaml",
                "--options_style_transfer",
                "G_A",
                "../../Models/CycleGAN/renaissance/latest_net_G_A.pth",
                "G_B",
                "../../Models/CycleGAN/renaissance/latest_net_G_B.pth"
            ],
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python: Test Pose Estimation",
            "type": "debugpy",
            "request": "launch",
            "program": "./src/test_pose_estimation.py",
            "args": [
                "--data_root",
                "../../Datasets/HumanArt",
                "--dataset",
                "oil_painting",
                "--model",
                "ViTPose",
                "--batch_size",
                "1",
                "--num_workers",
                "1",
                "--results_dir",
                ".output/metrics",
                "--results_prefix",
                "coco__vitpose_mixed",
                "--config",
                "src/pose_estimation/config/vitpose_base_validation.py",
                "--options",
                "model_file",
                "../../Models/vitpose/coco/best_coco_AP_epoch_210.pth",
            ],
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python: Augment with cyclegan",
            "type": "debugpy",
            "request": "launch",
            "program": "./src/augment_dataset_cyclegan.py",
            "args": [
                "--coco",
                "../../Datasets/custom/coco_annotations_small",
                "--models",
                "../../Models/CycleGAN",
                "--styles",
                "baroque",
                "impressionism",
                "renaissance",
                "mixed",
                "--gpu_ids",
                "0",
                "--num_workers",
                "2",
                "--log",
                ".output/logs"
            ],
            "justMyCode": false
        }, {
            "name": "Python: Augment with AdaIN",
            "type": "debugpy",
            "request": "launch",
            "program": "./src/augment_dataset_adain.py",
            "args": [
                "--coco",
                "../../Datasets/custom/coco_annotations_small",
                "--style_dir",
                "../../Datasets/custom/StarGANTraining/train",
                "--styles",
                "baroque",
                "impressionism",
                "renaissance",
                "mixed",
                "--gpu_ids",
                "0",
                "--num_workers",
                "2",
                "--log",
                ".output/logs"
            ],
            "justMyCode": false
        },
        {
            "name": "Python: Valid SWAHR",
            "type": "debugpy",
            "request": "launch",
            "program": "./lib/SWAHR/tools/dist_valid.py",
            "args": [
                "--cfg",
                "./experiments/coco/higher_hrnet/w32_512_adam_lr1e-3.yaml"
            ],
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python: Train SWAHR",
            "type": "debugpy",
            "request": "launch",
            "program": "./src/train_SWAHR.py",
            "args": [
                "--name",
                "styled",
                "--batch_size",
                "1",
                "--num_workers",
                "4",
                "--log",
                ".output/logs",
                "--config_file",
                "src/pose_estimation/config/w48_640_train.yaml",
                "--annotation_file",
                "person_keypoints_train2017.json"
            ],
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python: Validate ViTPose",
            "type": "debugpy",
            "request": "launch",
            "program": "./src/train_ViTPose.py",
            "args": [
                "--method",
                "validate",
                "--batch_size",
                "1",
                "--num_workers",
                "1",
                "--data_root",
                "../../Datasets/",
                "--model",
                "../../Models/vitpose/td-hm_ViTPose-base_8xb64-210e_coco-256x192-216eae50_20230314.pth",
                "--log",
                ".output/logs",
                "--config_file",
                "src/pose_estimation/config/vitpose_base_validation.py",
                "--annotation_file",
                "HumanArt/annotations/validation_humanart_oil_painting.json"
            ],
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python: Train ViTPose",
            "type": "debugpy",
            "request": "launch",
            "program": "./src/train_ViTPose.py",
            "args": [
                "--method",
                "train",
                "--name",
                "test",
                "--batch_size",
                "2",
                "--num_workers",
                "1",
                "--config_file",
                "src/pose_estimation/config/vitpose_base_train.py",
                "--annotation_file",
                "annotations/person_keypoints_coco_and_styled_train_mixed.json",
                "annotations/person_keypoints_coco_and_styled_val_mixed.json"
            ],
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python: Infer ViTPose",
            "type": "debugpy",
            "request": "launch",
            "program": "./src/train_ViTPose.py",
            "args": [
                "--method",
                "infer",
                "--model",
                "../../Models/vitpose/mixed/best_coco_AP_epoch_210.pth",
                "--log",
                ".output/logs",
                "--results_dir",
                ".output/results",
                "--config_file",
                "src/pose_estimation/config/vitpose_base_validation.py",
                "--infer_file",
                "../../Datasets/custom/000000001407.png"
            ],
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python: Test UGATIT",
            "type": "debugpy",
            "request": "launch",
            "program": "src/test_UGATIT.py",
            "env": {
                "PYTORCH_CUDA_ALLOC_CONF": "max_split_size_mb:512",
                "CUDA_LAUNCH_BLOCKING": "1"
            },
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python: Correct Annotations",
            "type": "debugpy",
            "request": "launch",
            "program": "src/correct_annotations.py",
            "args": [
                "--annotations_dir",
                "../../Datasets/custom/coco_annotations_small/annotations"
            ],
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python: Test CycleGAN",
            "type": "debugpy",
            "request": "launch",
            "cwd": "lib/CycleGAN",
            "program": "test.py",
            "args": [
                "--dataroot",
                "../../../../Datasets/cezanne2photo",
                "--name",
                "style_cezanne_pretrained",
                "--model",
                "test",
                "--no_dropout"
            ],
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python: Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Main",
            "type": "debugpy",
            "request": "launch",
            "program": "main.py",
            "args": [
                ".data/videos/MSK_08.mp4"
            ],
            "env": {
                "DISPLAY": "${input:xlaunch_ip}:0",
                "LIBGL_ALWAYS_INDIRECT": "1"
            },
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python: Current File w XLaunch",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "env": {
                "DISPLAY": "${input:xlaunch_ip}:0",
                "LIBGL_ALWAYS_INDIRECT": "1"
            },
            "console": "integratedTerminal",
            "justMyCode": false
        }
    ],
    "inputs": [{
        "id": "xlaunch_ip",
        "type": "command",
        "command": "shellCommand.execute",
        "args": {
            "command": "ip route list default | awk '{print $3}'"
        }
    }, {
        "id": "pickConfigFile",
        "type": "command",
        "command": "extension.commandvariable.file.pickFile",
        "args": {
            "include": "src/config/**/*",
            "description": "Pick a config file"
        } 
    }]
}